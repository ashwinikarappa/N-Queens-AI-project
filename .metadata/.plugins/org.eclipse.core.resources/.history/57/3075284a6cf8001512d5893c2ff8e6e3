
public class Backtracking {
	  //check if the column is safe place to put Qi (ith Queen)
	  private static boolean isSafePlace(int column, int Qi, int[] board) {
	 
	    //check for all previously placed queens
	    for (int i = 0; i < Qi; i++) {
	      if (board[i] == column) { // the ith Queen(previous) is in same column
	        return false;
	      }
	      //the ith Queen is in diagonal
	      //(r1, c1) - (r2, c1). if |r1-r2| == |c1-c2| then they are in diagonal
	      if (Math.abs(board[i] - column) == Math.abs(i - Qi)) {
	        return false;
	      }
	    }
	    return true;
	  }
}
