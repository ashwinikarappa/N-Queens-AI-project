package ai.star.csp;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;

public class MinConflicts {
	private int nodesComputed = 0;
	private ArrayList<int[]> solutions = new ArrayList<int[]>();
	private ArrayList<Integer> randomNumbers = new ArrayList<Integer>(); 
	public void minConflicts(int numberOfQueens){
		NqueenPuzzleSolver puzzleBoard = new NqueenPuzzleSolver(numberOfQueens);
		for(int i=0;i< numberOfQueens;i++)
			puzzleBoard.queenPlacement[i] = i;
		//shuffleArray(puzzleBoard.queenPlacement);
		System.out.println(Arrays.toString(puzzleBoard.queenPlacement));
		
	}
	void shuffleArray(int[] queenPlacement)
	  {
	    // If running on Java 6 or older, use `new Random()` on RHS here
	    Random rnd = new Random();
	    for (int i = queenPlacement.length - 1; i > 0; i--)
	    {
	      int index = rnd.nextInt(i + 1);
	      // Simple swap
	      int a = queenPlacement[index];
	      queenPlacement[index] = queenPlacement[i];
	      queenPlacement[i] = a;
	    }
	  }
	public static void main(String[] args) {
		MinConflicts m = new MinConflicts();
		m.minConflicts(4);
	}
}
